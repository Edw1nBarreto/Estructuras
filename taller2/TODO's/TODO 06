/**
 * @brief Returns the symmetric difference (elements in one set but not both).
 * @param other The other set to compare against.
 * @return A new DataSet<T> representing the symmetric difference.
 */
template <typename T>
DataSet<T> DataSet<T>::symmetricDifferenceWith(const DataSet<T> &other) const
{
    DataSet<T> result(this->getName() + " △ " + other.getName());
    DataSet<T> diff1 = this->differenceWith(other); //A-B
    DataSet<T> diff2 = other.differenceWith(*this); //Se desreferencia el puntero this, B-A
    result = diff1.unionWith(diff2); // (A-B)∪(B-A)
    // TODO #06: Implementar la operación diferencia simétrica (symmetricDifferenceWith)
    // La diferencia simétrica entre dos conjuntos A y B se define como:
    // (A − B) ∪ (B − A). El resultado debe contener los elementos que están en
    // exactamente uno de los dos conjuntos, pero no en ambos.
    //
    // Resultado esperado: un nuevo DataSet<T> que represente A △ B.
    return result;
}
